# -*- coding: utf-8 -*-
"""Task5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kyV_F00LlWIYnrrr625cpwdZaWIwm17P
"""

from google.colab import drive
drive.mount('/content/drive')

task5_input = open(file='/content/drive/MyDrive/CSE221/Lab 04/input5.txt', mode='r')

task5_output = open(file='/content/drive/MyDrive/CSE221/Lab 04/output5.txt', mode='w')

lst = task5_input.readline().strip().split(" ")
v = int(lst[0])
e = int(lst[1])
d = int(lst[2])
adj_list = {}
for i in range(1, v+1):
    adj_list[i] = []
for i in range(e):
    lst2 = task5_input.readline().strip().split()
    u = int(lst2[0])
    v = int(lst2[1])
    adj_list[u].append(v)
    adj_list[v].append(u)

from collections import deque

def bfs_shortest_path(graph, start, end):
    queue = deque([(start, [])])
    visited = set()
    while queue:
        node, path = queue.popleft()
        if node == end:
            return len(path), path + [node]
        if node not in visited:
            visited.add(node)
            for v in graph[node]:
                if v not in visited:
                    queue.append((v, path + [node]))

time, shortest_path = bfs_shortest_path(adj_list, 1, d)

task5_output.write('Time: ' + str(time) + '\n')
task5_output.write('Shortest path: ' + " ".join(map(str, shortest_path)))

task5_input.close()
task5_output.close()